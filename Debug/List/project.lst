
AVRASM ver. 2.1.30  C:\Users\Amin\Desktop\projeNira\Debug\List\project.asm Fri Apr 15 16:43:09 2016

C:\Users\Amin\Desktop\projeNira\Debug\List\project.asm(1088): warning: Register r5 already defined by the .DEF directive
C:\Users\Amin\Desktop\projeNira\Debug\List\project.asm(1089): warning: Register r4 already defined by the .DEF directive
C:\Users\Amin\Desktop\projeNira\Debug\List\project.asm(1090): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0047 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x17:
000033 0000
000034 0000
000035 0000
000036 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000037 0000
000038 0000
000039 0000
00003a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00003b 0000
00003c 0301
00003d 0602
00003e 0c04      	.DB  0x0,0x0,0x1,0x3,0x2,0x6,0x4,0xC
00003f 0908      	.DB  0x8,0x9
                 _0x0:
000040 6425
C:\Users\Amin\Desktop\projeNira\Debug\List\project.asm(1133): warning: .cseg .db misalignment - padding zero byte
000041 0000      	.DB  0x25,0x64,0x0
                 _0x2000003:
000042 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000043 0002      	.DW  0x02
000044 0160      	.DW  __base_y_G100
000045 0084      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000046 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000047 94f8      	CLI
000048 27ee      	CLR  R30
000049 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004a e0f1      	LDI  R31,1
00004b bffb      	OUT  GICR,R31
00004c bfeb      	OUT  GICR,R30
00004d bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00004e e08d      	LDI  R24,(14-2)+1
00004f e0a2      	LDI  R26,2
000050 27bb      	CLR  R27
                 __CLEAR_REG:
000051 93ed      	ST   X+,R30
000052 958a      	DEC  R24
000053 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000054 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000055 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000056 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000057 93ed      	ST   X+,R30
000058 9701      	SBIW R24,1
000059 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00005a e8e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00005b e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00005c 9185      	LPM  R24,Z+
00005d 9195      	LPM  R25,Z+
00005e 9700      	SBIW R24,0
00005f f061      	BREQ __GLOBAL_INI_END
000060 91a5      	LPM  R26,Z+
000061 91b5      	LPM  R27,Z+
000062 9005      	LPM  R0,Z+
000063 9015      	LPM  R1,Z+
000064 01bf      	MOVW R22,R30
000065 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000066 9005      	LPM  R0,Z+
000067 920d      	ST   X+,R0
000068 9701      	SBIW R24,1
000069 f7e1      	BRNE __GLOBAL_INI_LOOP
00006a 01fb      	MOVW R30,R22
00006b cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006c e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006d bfed      	OUT  SPL,R30
00006e e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00006f bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000070 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000071 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000072 940c 0074 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;
                 ;#define Dir PORTC
                 ;
                 ;void step_motor(int speed ,char L_R ,char F_H ,int rotate);
                 ;
                 ;void main(){
                 ; 0000 000A void main(){
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 000B 
                 ; 0000 000C     DDRC.2=1;
000074 9aa2      	SBI  0x14,2
                 ; 0000 000D     DDRC.3=1;
000075 9aa3      	SBI  0x14,3
                 ; 0000 000E     DDRC.4=1;
000076 9aa4      	SBI  0x14,4
                 ; 0000 000F     DDRC.5=1;
000077 9aa5      	SBI  0x14,5
                 ; 0000 0010 
                 ; 0000 0011     PORTC.2=0;
000078 98aa      	CBI  0x15,2
                 ; 0000 0012     PORTC.3=0;
000079 98ab      	CBI  0x15,3
                 ; 0000 0013     PORTC.4=0;
00007a 98ac      	CBI  0x15,4
                 ; 0000 0014     PORTC.5=0;
00007b 98ad      	CBI  0x15,5
                 ; 0000 0015 
                 ; 0000 0016     lcd_init(16);
00007c e1a0      	LDI  R26,LOW(16)
00007d d0df      	RCALL _lcd_init
                 ; 0000 0017     lcd_clear();
00007e d0ac      	RCALL _lcd_clear
                 ; 0000 0018 
                 ; 0000 0019             step_motor(500,'r','f',1);
00007f efe4      	LDI  R30,LOW(500)
000080 e0f1      	LDI  R31,HIGH(500)
000081 93fa      	ST   -Y,R31
000082 93ea      	ST   -Y,R30
000083 e7e2      	LDI  R30,LOW(114)
000084 93ea      	ST   -Y,R30
000085 e6e6      	LDI  R30,LOW(102)
000086 93ea      	ST   -Y,R30
000087 e0a1      	LDI  R26,LOW(1)
000088 e0b0      	LDI  R27,0
000089 d002      	RCALL _step_motor
                 ; 0000 001A 
                 ; 0000 001B      while(1){
                 _0x13:
                 ; 0000 001C 
                 ; 0000 001D 
                 ; 0000 001E      }
00008a cfff      	RJMP _0x13
                 ; 0000 001F 
                 ; 0000 0020 }
                 _0x16:
00008b cfff      	RJMP _0x16
                 ; .FEND
                 ;
                 ;void step_motor(int speed ,char L_R ,char F_H ,int rotate){
                 ; 0000 0022 void step_motor(int speed ,char L_R ,char F_H ,int rotate){
                 _step_motor:
                 ; .FSTART _step_motor
                 ; 0000 0023 
                 ; 0000 0024          unsigned char i,j,z;
                 ; 0000 0025          char array[8]={1,3,2,6,4,12,8,9};
                 ; 0000 0026          char array1[18]={0};
                 ; 0000 0027 
                 ; 0000 0028          if(F_H=='f'){
00008c 93ba      	ST   -Y,R27
00008d 93aa      	ST   -Y,R26
00008e 976a      	SBIW R28,26
00008f e18a      	LDI  R24,26
000090 e0a0      	LDI  R26,LOW(0)
000091 e0b0      	LDI  R27,HIGH(0)
000092 e6e6      	LDI  R30,LOW(_0x17*2)
000093 e0f0      	LDI  R31,HIGH(_0x17*2)
000094 940e 03fb 	CALL __INITLOCB
000096 940e 03ef 	CALL __SAVELOCR4
                 ;	speed -> Y+34
                 ;	L_R -> Y+33
                 ;	F_H -> Y+32
                 ;	rotate -> Y+30
                 ;	i -> R17
                 ;	j -> R16
                 ;	z -> R19
                 ;	array -> Y+22
                 ;	array1 -> Y+4
000098 a1a8      	LDD  R26,Y+32
000099 36a6      	CPI  R26,LOW(0x66)
00009a f561      	BRNE _0x18
                 ; 0000 0029                if(L_R=='l'){
00009b a1a9      	LDD  R26,Y+33
00009c 36ac      	CPI  R26,LOW(0x6C)
00009d f499      	BRNE _0x19
                 ; 0000 002A                   for(z=0;z<rotate;z++){
00009e e030      	LDI  R19,LOW(0)
                 _0x1B:
00009f 940e 034c 	CALL SUBOPT_0x0
0000a1 f474      	BRGE _0x1C
                 ; 0000 002B                       for(i=0;i<6;i++){
0000a2 e010      	LDI  R17,LOW(0)
                 _0x1E:
0000a3 3016      	CPI  R17,6
0000a4 f448      	BRSH _0x1F
                 ; 0000 002C                           for(j=5;j>1;j--){
0000a5 e005      	LDI  R16,LOW(5)
                 _0x21:
0000a6 3002      	CPI  R16,2
0000a7 f020      	BRLO _0x22
                 ; 0000 002D                               delay_ms(speed);
0000a8 940e 0353 	CALL SUBOPT_0x1
                 ; 0000 002E                               Dir=0x01<<j;
                 ; 0000 002F                           }
0000aa 5001      	SUBI R16,1
0000ab cffa      	RJMP _0x21
                 _0x22:
                 ; 0000 0030                       }
0000ac 5f1f      	SUBI R17,-1
0000ad cff5      	RJMP _0x1E
                 _0x1F:
                 ; 0000 0031                   }
0000ae 5f3f      	SUBI R19,-1
0000af cfef      	RJMP _0x1B
                 _0x1C:
                 ; 0000 0032                }else if(L_R=='r'){
0000b0 c015      	RJMP _0x23
                 _0x19:
0000b1 a1a9      	LDD  R26,Y+33
0000b2 37a2      	CPI  R26,LOW(0x72)
0000b3 f491      	BRNE _0x24
                 ; 0000 0033                   for(z=0;z<rotate;z++){
0000b4 e030      	LDI  R19,LOW(0)
                 _0x26:
0000b5 940e 034c 	CALL SUBOPT_0x0
0000b7 f474      	BRGE _0x27
                 ; 0000 0034                       for(i=0;i<6;i++){
0000b8 e010      	LDI  R17,LOW(0)
                 _0x29:
0000b9 3016      	CPI  R17,6
0000ba f448      	BRSH _0x2A
                 ; 0000 0035                           for(j=2;j<6;j++){
0000bb e002      	LDI  R16,LOW(2)
                 _0x2C:
0000bc 3006      	CPI  R16,6
0000bd f420      	BRSH _0x2D
                 ; 0000 0036                               delay_ms(speed);
0000be 940e 0353 	CALL SUBOPT_0x1
                 ; 0000 0037                               Dir=0x01<<j;
                 ; 0000 0038                           }
0000c0 5f0f      	SUBI R16,-1
0000c1 cffa      	RJMP _0x2C
                 _0x2D:
                 ; 0000 0039                       }
0000c2 5f1f      	SUBI R17,-1
0000c3 cff5      	RJMP _0x29
                 _0x2A:
                 ; 0000 003A                   }
0000c4 5f3f      	SUBI R19,-1
0000c5 cfef      	RJMP _0x26
                 _0x27:
                 ; 0000 003B                }
                 ; 0000 003C 
                 ; 0000 003D          }else if(F_H=='h'){
                 _0x24:
                 _0x23:
0000c6 c033      	RJMP _0x2E
                 _0x18:
0000c7 a1a8      	LDD  R26,Y+32
0000c8 36a8      	CPI  R26,LOW(0x68)
0000c9 f581      	BRNE _0x2F
                 ; 0000 003E                if(L_R=='l'){
0000ca a1a9      	LDD  R26,Y+33
0000cb 36ac      	CPI  R26,LOW(0x6C)
0000cc f4b1      	BRNE _0x30
                 ; 0000 003F                   for(z=0;z<rotate;z++){
0000cd e030      	LDI  R19,LOW(0)
                 _0x32:
0000ce 940e 034c 	CALL SUBOPT_0x0
0000d0 f48c      	BRGE _0x33
                 ; 0000 0040                       for(i=0;i<6;i++){
0000d1 e010      	LDI  R17,LOW(0)
                 _0x35:
0000d2 3016      	CPI  R17,6
0000d3 f460      	BRSH _0x36
                 ; 0000 0041                           for(j=8;j>0;j--){
0000d4 e008      	LDI  R16,LOW(8)
                 _0x38:
0000d5 3001      	CPI  R16,1
0000d6 f038      	BRLO _0x39
                 ; 0000 0042 
                 ; 0000 0043                               Dir=array[j-1]<<2;
0000d7 2fe0      	MOV  R30,R16
0000d8 e0f0      	LDI  R31,0
0000d9 9731      	SBIW R30,1
0000da 940e 035d 	CALL SUBOPT_0x2
                 ; 0000 0044 
                 ; 0000 0045                               lcd_clear();
                 ; 0000 0046                               lcd_gotoxy(1,0);
                 ; 0000 0047                               sprintf(array1,"%d",array[j]);
                 ; 0000 0048                               lcd_puts(array1);
                 ; 0000 0049                               delay_ms(speed);
                 ; 0000 004A                           }
0000dc 5001      	SUBI R16,1
0000dd cff7      	RJMP _0x38
                 _0x39:
                 ; 0000 004B 
                 ; 0000 004C                       }
0000de 5f1f      	SUBI R17,-1
0000df cff2      	RJMP _0x35
                 _0x36:
                 ; 0000 004D                   }
0000e0 5f3f      	SUBI R19,-1
0000e1 cfec      	RJMP _0x32
                 _0x33:
                 ; 0000 004E                }else if(L_R=='r'){
0000e2 c017      	RJMP _0x3A
                 _0x30:
0000e3 a1a9      	LDD  R26,Y+33
0000e4 37a2      	CPI  R26,LOW(0x72)
0000e5 f4a1      	BRNE _0x3B
                 ; 0000 004F                   for(z=0;z<rotate;z++){
0000e6 e030      	LDI  R19,LOW(0)
                 _0x3D:
0000e7 940e 034c 	CALL SUBOPT_0x0
0000e9 f484      	BRGE _0x3E
                 ; 0000 0050                       for(i=0;i<6;i++){
0000ea e010      	LDI  R17,LOW(0)
                 _0x40:
0000eb 3016      	CPI  R17,6
0000ec f458      	BRSH _0x41
                 ; 0000 0051                           for(j=0;j<8;j++){
0000ed e000      	LDI  R16,LOW(0)
                 _0x43:
0000ee 3008      	CPI  R16,8
0000ef f430      	BRSH _0x44
                 ; 0000 0052 
                 ; 0000 0053                               Dir=array[j]<<2;
0000f0 2fe0      	MOV  R30,R16
0000f1 e0f0      	LDI  R31,0
0000f2 940e 035d 	CALL SUBOPT_0x2
                 ; 0000 0054 
                 ; 0000 0055                               lcd_clear();
                 ; 0000 0056                               lcd_gotoxy(1,0);
                 ; 0000 0057                               sprintf(array1,"%d",array[j]);
                 ; 0000 0058                               lcd_puts(array1);
                 ; 0000 0059                               delay_ms(speed);
                 ; 0000 005A                           }
0000f4 5f0f      	SUBI R16,-1
0000f5 cff8      	RJMP _0x43
                 _0x44:
                 ; 0000 005B                       }
0000f6 5f1f      	SUBI R17,-1
0000f7 cff3      	RJMP _0x40
                 _0x41:
                 ; 0000 005C                   }
0000f8 5f3f      	SUBI R19,-1
0000f9 cfed      	RJMP _0x3D
                 _0x3E:
                 ; 0000 005D                }
                 ; 0000 005E 
                 ; 0000 005F          }
                 _0x3B:
                 _0x3A:
                 ; 0000 0060 
                 ; 0000 0061 
                 ; 0000 0062 
                 ; 0000 0063 }
                 _0x2F:
                 _0x2E:
0000fa 940e 03f6 	CALL __LOADLOCR4
0000fc 96a4      	ADIW R28,36
0000fd 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000fe 93aa      	ST   -Y,R26
0000ff b3eb      	IN   R30,0x1B
000100 70ef      	ANDI R30,LOW(0xF)
000101 2fae      	MOV  R26,R30
000102 81e8      	LD   R30,Y
000103 7fe0      	ANDI R30,LOW(0xF0)
000104 2bea      	OR   R30,R26
000105 bbeb      	OUT  0x1B,R30
                +
000106 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000107 958a     +DEC R24
000108 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000109 9adb      	SBI  0x1B,3
                +
00010a e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00010b 958a     +DEC R24
00010c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00010d 98db      	CBI  0x1B,3
                +
00010e e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00010f 958a     +DEC R24
000110 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000111 c077      	RJMP _0x2080002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000112 93aa      	ST   -Y,R26
000113 81a8      	LD   R26,Y
000114 dfe9      	RCALL __lcd_write_nibble_G100
000115 81e8          ld    r30,y
000116 95e2          swap  r30
000117 83e8          st    y,r30
000118 81a8      	LD   R26,Y
000119 dfe4      	RCALL __lcd_write_nibble_G100
                +
00011a e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
00011b 958a     +DEC R24
00011c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
00011d c06b      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
00011e 93aa      	ST   -Y,R26
00011f 81e8      	LD   R30,Y
000120 e0f0      	LDI  R31,0
000121 5ae0      	SUBI R30,LOW(-__base_y_G100)
000122 4ffe      	SBCI R31,HIGH(-__base_y_G100)
000123 81e0      	LD   R30,Z
000124 81a9      	LDD  R26,Y+1
000125 0fae      	ADD  R26,R30
000126 dfeb      	RCALL __lcd_write_data
000127 8059      	LDD  R5,Y+1
000128 8048      	LDD  R4,Y+0
000129 9622      	ADIW R28,2
00012a 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
00012b e0a2      	LDI  R26,LOW(2)
00012c 940e 038c 	CALL SUBOPT_0x3
00012e e0ac      	LDI  R26,LOW(12)
00012f dfe2      	RCALL __lcd_write_data
000130 e0a1      	LDI  R26,LOW(1)
000131 940e 038c 	CALL SUBOPT_0x3
000133 e0e0      	LDI  R30,LOW(0)
000134 2e4e      	MOV  R4,R30
000135 2e5e      	MOV  R5,R30
000136 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000137 93aa      	ST   -Y,R26
000138 81a8      	LD   R26,Y
000139 30aa      	CPI  R26,LOW(0xA)
00013a f011      	BREQ _0x2000005
00013b 1457      	CP   R5,R7
00013c f048      	BRLO _0x2000004
                 _0x2000005:
00013d e0e0      	LDI  R30,LOW(0)
00013e 93ea      	ST   -Y,R30
00013f 9443      	INC  R4
000140 2da4      	MOV  R26,R4
000141 dfdc      	RCALL _lcd_gotoxy
000142 81a8      	LD   R26,Y
000143 30aa      	CPI  R26,LOW(0xA)
000144 f409      	BRNE _0x2000007
000145 c043      	RJMP _0x2080002
                 _0x2000007:
                 _0x2000004:
000146 9453      	INC  R5
000147 9ad9      	SBI  0x1B,1
000148 81a8      	LD   R26,Y
000149 dfc8      	RCALL __lcd_write_data
00014a 98d9      	CBI  0x1B,1
00014b c03d      	RJMP _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00014c 93ba      	ST   -Y,R27
00014d 93aa      	ST   -Y,R26
00014e 931a      	ST   -Y,R17
                 _0x2000008:
00014f 81a9      	LDD  R26,Y+1
000150 81ba      	LDD  R27,Y+1+1
000151 91ed      	LD   R30,X+
000152 83a9      	STD  Y+1,R26
000153 83ba      	STD  Y+1+1,R27
000154 2f1e      	MOV  R17,R30
000155 30e0      	CPI  R30,0
000156 f019      	BREQ _0x200000A
000157 2fa1      	MOV  R26,R17
000158 dfde      	RCALL _lcd_putchar
000159 cff5      	RJMP _0x2000008
                 _0x200000A:
00015a 8118      	LDD  R17,Y+0
00015b 9623      	ADIW R28,3
00015c 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00015d 93aa      	ST   -Y,R26
00015e b3ea      	IN   R30,0x1A
00015f 6fe0      	ORI  R30,LOW(0xF0)
000160 bbea      	OUT  0x1A,R30
000161 9ad3      	SBI  0x1A,3
000162 9ad1      	SBI  0x1A,1
000163 9ad2      	SBI  0x1A,2
000164 98db      	CBI  0x1B,3
000165 98d9      	CBI  0x1B,1
000166 98da      	CBI  0x1B,2
000167 8078      	LDD  R7,Y+0
000168 81e8      	LD   R30,Y
000169 58e0      	SUBI R30,-LOW(128)
                +
00016a 93e0 0162+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00016c 81e8      	LD   R30,Y
00016d 54e0      	SUBI R30,-LOW(192)
                +
00016e 93e0 0163+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000170 e1a4      	LDI  R26,LOW(20)
000171 e0b0      	LDI  R27,0
000172 940e 03c6 	CALL _delay_ms
000174 940e 0392 	CALL SUBOPT_0x4
000176 940e 0392 	CALL SUBOPT_0x4
000178 940e 0392 	CALL SUBOPT_0x4
00017a e2a0      	LDI  R26,LOW(32)
00017b df82      	RCALL __lcd_write_nibble_G100
                +
00017c ec88     +LDI R24 , LOW ( 200 )
00017d e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00017e 9701     +SBIW R24 , 1
00017f f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000180 e2a8      	LDI  R26,LOW(40)
000181 df90      	RCALL __lcd_write_data
000182 e0a4      	LDI  R26,LOW(4)
000183 df8e      	RCALL __lcd_write_data
000184 e8a5      	LDI  R26,LOW(133)
000185 df8c      	RCALL __lcd_write_data
000186 e0a6      	LDI  R26,LOW(6)
000187 df8a      	RCALL __lcd_write_data
000188 dfa2      	RCALL _lcd_clear
                 _0x2080002:
000189 9621      	ADIW R28,1
00018a 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
00018b 93ba      	ST   -Y,R27
00018c 93aa      	ST   -Y,R26
00018d 931a      	ST   -Y,R17
00018e 930a      	ST   -Y,R16
00018f 81aa      	LDD  R26,Y+2
000190 81bb      	LDD  R27,Y+2+1
000191 9612      	ADIW R26,2
000192 940e 03e0 	CALL __GETW1P
000194 9730      	SBIW R30,0
000195 f159      	BREQ _0x2020010
000196 81aa      	LDD  R26,Y+2
000197 81bb      	LDD  R27,Y+2+1
000198 9614      	ADIW R26,4
000199 940e 03e0 	CALL __GETW1P
00019b 018f      	MOVW R16,R30
00019c 9730      	SBIW R30,0
00019d f061      	BREQ _0x2020012
                +
00019e 3002     +CPI R16 , LOW ( 2 )
00019f e0e0     +LDI R30 , HIGH ( 2 )
0001a0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0001a1 f098      	BRLO _0x2020013
0001a2 01f8      	MOVW R30,R16
0001a3 9731      	SBIW R30,1
0001a4 018f      	MOVW R16,R30
                +
0001a5 81aa     +LDD R26 , Y + 2
0001a6 81bb     +LDD R27 , Y + 2 + 1
0001a7 9614     +ADIW R26 , 4
0001a8 93ed     +ST X + , R30
0001a9 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
0001aa 81aa      	LDD  R26,Y+2
0001ab 81bb      	LDD  R27,Y+2+1
0001ac 9612      	ADIW R26,2
0001ad 91ed      	LD   R30,X+
0001ae 91fd      	LD   R31,X+
0001af 9631      	ADIW R30,1
0001b0 93fe      	ST   -X,R31
0001b1 93ee      	ST   -X,R30
0001b2 9731      	SBIW R30,1
0001b3 81ac      	LDD  R26,Y+4
0001b4 83a0      	STD  Z+0,R26
                 _0x2020013:
0001b5 81aa      	LDD  R26,Y+2
0001b6 81bb      	LDD  R27,Y+2+1
0001b7 940e 03e0 	CALL __GETW1P
0001b9 23ff      	TST  R31
0001ba f02a      	BRMI _0x2020014
0001bb 91ed      	LD   R30,X+
0001bc 91fd      	LD   R31,X+
0001bd 9631      	ADIW R30,1
0001be 93fe      	ST   -X,R31
0001bf 93ee      	ST   -X,R30
                 _0x2020014:
0001c0 c006      	RJMP _0x2020015
                 _0x2020010:
0001c1 81aa      	LDD  R26,Y+2
0001c2 81bb      	LDD  R27,Y+2+1
0001c3 efef      	LDI  R30,LOW(65535)
0001c4 efff      	LDI  R31,HIGH(65535)
0001c5 93ed      	ST   X+,R30
0001c6 93fc      	ST   X,R31
                 _0x2020015:
0001c7 8119      	LDD  R17,Y+1
0001c8 8108      	LDD  R16,Y+0
0001c9 9625      	ADIW R28,5
0001ca 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0001cb 93ba      	ST   -Y,R27
0001cc 93aa      	ST   -Y,R26
0001cd 9726      	SBIW R28,6
0001ce 940e 03ed 	CALL __SAVELOCR6
0001d0 e010      	LDI  R17,0
0001d1 85ac      	LDD  R26,Y+12
0001d2 85bd      	LDD  R27,Y+12+1
0001d3 e0e0      	LDI  R30,LOW(0)
0001d4 e0f0      	LDI  R31,HIGH(0)
0001d5 93ed      	ST   X+,R30
0001d6 93fc      	ST   X,R31
                 _0x2020016:
0001d7 89ea      	LDD  R30,Y+18
0001d8 89fb      	LDD  R31,Y+18+1
0001d9 9631      	ADIW R30,1
0001da 8bea      	STD  Y+18,R30
0001db 8bfb      	STD  Y+18+1,R31
0001dc 9731      	SBIW R30,1
0001dd 91e4      	LPM  R30,Z
0001de 2f2e      	MOV  R18,R30
0001df 30e0      	CPI  R30,0
0001e0 f409      	BRNE PC+2
0001e1 c115      	RJMP _0x2020018
0001e2 2fe1      	MOV  R30,R17
0001e3 30e0      	CPI  R30,0
0001e4 f439      	BRNE _0x202001C
0001e5 3225      	CPI  R18,37
0001e6 f411      	BRNE _0x202001D
0001e7 e011      	LDI  R17,LOW(1)
0001e8 c002      	RJMP _0x202001E
                 _0x202001D:
0001e9 940e 039a 	CALL SUBOPT_0x5
                 _0x202001E:
0001eb c10a      	RJMP _0x202001B
                 _0x202001C:
0001ec 30e1      	CPI  R30,LOW(0x1)
0001ed f4a9      	BRNE _0x202001F
0001ee 3225      	CPI  R18,37
0001ef f419      	BRNE _0x2020020
0001f0 940e 039a 	CALL SUBOPT_0x5
0001f2 c102      	RJMP _0x20200CC
                 _0x2020020:
0001f3 e012      	LDI  R17,LOW(2)
0001f4 e040      	LDI  R20,LOW(0)
0001f5 e000      	LDI  R16,LOW(0)
0001f6 322d      	CPI  R18,45
0001f7 f411      	BRNE _0x2020021
0001f8 e001      	LDI  R16,LOW(1)
0001f9 c0fc      	RJMP _0x202001B
                 _0x2020021:
0001fa 322b      	CPI  R18,43
0001fb f411      	BRNE _0x2020022
0001fc e24b      	LDI  R20,LOW(43)
0001fd c0f8      	RJMP _0x202001B
                 _0x2020022:
0001fe 3220      	CPI  R18,32
0001ff f411      	BRNE _0x2020023
000200 e240      	LDI  R20,LOW(32)
000201 c0f4      	RJMP _0x202001B
                 _0x2020023:
000202 c002      	RJMP _0x2020024
                 _0x202001F:
000203 30e2      	CPI  R30,LOW(0x2)
000204 f439      	BRNE _0x2020025
                 _0x2020024:
000205 e050      	LDI  R21,LOW(0)
000206 e013      	LDI  R17,LOW(3)
000207 3320      	CPI  R18,48
000208 f411      	BRNE _0x2020026
000209 6800      	ORI  R16,LOW(128)
00020a c0eb      	RJMP _0x202001B
                 _0x2020026:
00020b c003      	RJMP _0x2020027
                 _0x2020025:
00020c 30e3      	CPI  R30,LOW(0x3)
00020d f009      	BREQ PC+2
00020e c0e7      	RJMP _0x202001B
                 _0x2020027:
00020f 3320      	CPI  R18,48
000210 f010      	BRLO _0x202002A
000211 332a      	CPI  R18,58
000212 f008      	BRLO _0x202002B
                 _0x202002A:
000213 c007      	RJMP _0x2020029
                 _0x202002B:
000214 e0aa      	LDI  R26,LOW(10)
000215 9f5a      	MUL  R21,R26
000216 2d50      	MOV  R21,R0
000217 2fe2      	MOV  R30,R18
000218 53e0      	SUBI R30,LOW(48)
000219 0f5e      	ADD  R21,R30
00021a c0db      	RJMP _0x202001B
                 _0x2020029:
00021b 2fe2      	MOV  R30,R18
00021c 36e3      	CPI  R30,LOW(0x63)
00021d f449      	BRNE _0x202002F
00021e 940e 03a1 	CALL SUBOPT_0x6
000220 89e8      	LDD  R30,Y+16
000221 89f9      	LDD  R31,Y+16+1
000222 81a4      	LDD  R26,Z+4
000223 93aa      	ST   -Y,R26
000224 940e 03a7 	CALL SUBOPT_0x7
000226 c0ce      	RJMP _0x2020030
                 _0x202002F:
000227 37e3      	CPI  R30,LOW(0x73)
000228 f441      	BRNE _0x2020032
000229 940e 03a1 	CALL SUBOPT_0x6
00022b 940e 03ad 	CALL SUBOPT_0x8
00022d 940e 0333 	CALL _strlen
00022f 2f1e      	MOV  R17,R30
000230 c00a      	RJMP _0x2020033
                 _0x2020032:
000231 37e0      	CPI  R30,LOW(0x70)
000232 f461      	BRNE _0x2020035
000233 940e 03a1 	CALL SUBOPT_0x6
000235 940e 03ad 	CALL SUBOPT_0x8
000237 940e 033f 	CALL _strlenf
000239 2f1e      	MOV  R17,R30
00023a 6008      	ORI  R16,LOW(8)
                 _0x2020033:
00023b 6002      	ORI  R16,LOW(2)
00023c 770f      	ANDI R16,LOW(127)
00023d e030      	LDI  R19,LOW(0)
00023e c034      	RJMP _0x2020036
                 _0x2020035:
00023f 36e4      	CPI  R30,LOW(0x64)
000240 f011      	BREQ _0x2020039
000241 36e9      	CPI  R30,LOW(0x69)
000242 f411      	BRNE _0x202003A
                 _0x2020039:
000243 6004      	ORI  R16,LOW(4)
000244 c002      	RJMP _0x202003B
                 _0x202003A:
000245 37e5      	CPI  R30,LOW(0x75)
000246 f431      	BRNE _0x202003C
                 _0x202003B:
000247 e5e4      	LDI  R30,LOW(_tbl10_G101*2)
000248 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
000249 83ee      	STD  Y+6,R30
00024a 83ff      	STD  Y+6+1,R31
00024b e015      	LDI  R17,LOW(5)
00024c c00c      	RJMP _0x202003D
                 _0x202003C:
00024d 35e8      	CPI  R30,LOW(0x58)
00024e f411      	BRNE _0x202003F
00024f 6008      	ORI  R16,LOW(8)
000250 c003      	RJMP _0x2020040
                 _0x202003F:
000251 37e8      	CPI  R30,LOW(0x78)
000252 f009      	BREQ PC+2
000253 c0a1      	RJMP _0x2020071
                 _0x2020040:
000254 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000255 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000256 83ee      	STD  Y+6,R30
000257 83ff      	STD  Y+6+1,R31
000258 e014      	LDI  R17,LOW(4)
                 _0x202003D:
000259 ff02      	SBRS R16,2
00025a c014      	RJMP _0x2020042
00025b 940e 03a1 	CALL SUBOPT_0x6
00025d 940e 03b7 	CALL SUBOPT_0x9
00025f 85ab      	LDD  R26,Y+11
000260 23aa      	TST  R26
000261 f43a      	BRPL _0x2020043
000262 85ea      	LDD  R30,Y+10
000263 85fb      	LDD  R31,Y+10+1
000264 940e 03d4 	CALL __ANEGW1
000266 87ea      	STD  Y+10,R30
000267 87fb      	STD  Y+10+1,R31
000268 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
000269 3040      	CPI  R20,0
00026a f011      	BREQ _0x2020044
00026b 5f1f      	SUBI R17,-LOW(1)
00026c c001      	RJMP _0x2020045
                 _0x2020044:
00026d 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
00026e c004      	RJMP _0x2020046
                 _0x2020042:
00026f 940e 03a1 	CALL SUBOPT_0x6
000271 940e 03b7 	CALL SUBOPT_0x9
                 _0x2020046:
                 _0x2020036:
000273 fd00      	SBRC R16,0
000274 c011      	RJMP _0x2020047
                 _0x2020048:
000275 1715      	CP   R17,R21
000276 f478      	BRSH _0x202004A
000277 ff07      	SBRS R16,7
000278 c008      	RJMP _0x202004B
000279 ff02      	SBRS R16,2
00027a c004      	RJMP _0x202004C
00027b 7f0b      	ANDI R16,LOW(251)
00027c 2f24      	MOV  R18,R20
00027d 5011      	SUBI R17,LOW(1)
00027e c001      	RJMP _0x202004D
                 _0x202004C:
00027f e320      	LDI  R18,LOW(48)
                 _0x202004D:
000280 c001      	RJMP _0x202004E
                 _0x202004B:
000281 e220      	LDI  R18,LOW(32)
                 _0x202004E:
000282 940e 039a 	CALL SUBOPT_0x5
000284 5051      	SUBI R21,LOW(1)
000285 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000286 2f31      	MOV  R19,R17
000287 ff01      	SBRS R16,1
000288 c017      	RJMP _0x202004F
                 _0x2020050:
000289 3030      	CPI  R19,0
00028a f0a1      	BREQ _0x2020052
00028b ff03      	SBRS R16,3
00028c c006      	RJMP _0x2020053
00028d 81ee      	LDD  R30,Y+6
00028e 81ff      	LDD  R31,Y+6+1
00028f 9125      	LPM  R18,Z+
000290 83ee      	STD  Y+6,R30
000291 83ff      	STD  Y+6+1,R31
000292 c005      	RJMP _0x2020054
                 _0x2020053:
000293 81ae      	LDD  R26,Y+6
000294 81bf      	LDD  R27,Y+6+1
000295 912d      	LD   R18,X+
000296 83ae      	STD  Y+6,R26
000297 83bf      	STD  Y+6+1,R27
                 _0x2020054:
000298 940e 039a 	CALL SUBOPT_0x5
00029a 3050      	CPI  R21,0
00029b f009      	BREQ _0x2020055
00029c 5051      	SUBI R21,LOW(1)
                 _0x2020055:
00029d 5031      	SUBI R19,LOW(1)
00029e cfea      	RJMP _0x2020050
                 _0x2020052:
00029f c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
0002a0 e320      	LDI  R18,LOW(48)
0002a1 81ee      	LDD  R30,Y+6
0002a2 81ff      	LDD  R31,Y+6+1
0002a3 940e 03e4 	CALL __GETW1PF
0002a5 87e8      	STD  Y+8,R30
0002a6 87f9      	STD  Y+8+1,R31
0002a7 81ee      	LDD  R30,Y+6
0002a8 81ff      	LDD  R31,Y+6+1
0002a9 9632      	ADIW R30,2
0002aa 83ee      	STD  Y+6,R30
0002ab 83ff      	STD  Y+6+1,R31
                 _0x202005A:
0002ac 85e8      	LDD  R30,Y+8
0002ad 85f9      	LDD  R31,Y+8+1
0002ae 85aa      	LDD  R26,Y+10
0002af 85bb      	LDD  R27,Y+10+1
0002b0 17ae      	CP   R26,R30
0002b1 07bf      	CPC  R27,R31
0002b2 f050      	BRLO _0x202005C
0002b3 5f2f      	SUBI R18,-LOW(1)
0002b4 85a8      	LDD  R26,Y+8
0002b5 85b9      	LDD  R27,Y+8+1
0002b6 85ea      	LDD  R30,Y+10
0002b7 85fb      	LDD  R31,Y+10+1
0002b8 1bea      	SUB  R30,R26
0002b9 0bfb      	SBC  R31,R27
0002ba 87ea      	STD  Y+10,R30
0002bb 87fb      	STD  Y+10+1,R31
0002bc cfef      	RJMP _0x202005A
                 _0x202005C:
0002bd 332a      	CPI  R18,58
0002be f028      	BRLO _0x202005D
0002bf ff03      	SBRS R16,3
0002c0 c002      	RJMP _0x202005E
0002c1 5f29      	SUBI R18,-LOW(7)
0002c2 c001      	RJMP _0x202005F
                 _0x202005E:
0002c3 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
0002c4 fd04      	SBRC R16,4
0002c5 c01a      	RJMP _0x2020061
0002c6 3321      	CPI  R18,49
0002c7 f420      	BRSH _0x2020063
0002c8 85a8      	LDD  R26,Y+8
0002c9 85b9      	LDD  R27,Y+8+1
0002ca 9711      	SBIW R26,1
0002cb f409      	BRNE _0x2020062
                 _0x2020063:
0002cc c009      	RJMP _0x20200CD
                 _0x2020062:
0002cd 1753      	CP   R21,R19
0002ce f010      	BRLO _0x2020067
0002cf ff00      	SBRS R16,0
0002d0 c001      	RJMP _0x2020068
                 _0x2020067:
0002d1 c013      	RJMP _0x2020066
                 _0x2020068:
0002d2 e220      	LDI  R18,LOW(32)
0002d3 ff07      	SBRS R16,7
0002d4 c00b      	RJMP _0x2020069
0002d5 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
0002d6 6100      	ORI  R16,LOW(16)
0002d7 ff02      	SBRS R16,2
0002d8 c007      	RJMP _0x202006A
0002d9 7f0b      	ANDI R16,LOW(251)
0002da 934a      	ST   -Y,R20
0002db 940e 03a7 	CALL SUBOPT_0x7
0002dd 3050      	CPI  R21,0
0002de f009      	BREQ _0x202006B
0002df 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
0002e0 940e 039a 	CALL SUBOPT_0x5
0002e2 3050      	CPI  R21,0
0002e3 f009      	BREQ _0x202006C
0002e4 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
0002e5 5031      	SUBI R19,LOW(1)
0002e6 85a8      	LDD  R26,Y+8
0002e7 85b9      	LDD  R27,Y+8+1
0002e8 9712      	SBIW R26,2
0002e9 f008      	BRLO _0x2020059
0002ea cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
0002eb ff00      	SBRS R16,0
0002ec c008      	RJMP _0x202006D
                 _0x202006E:
0002ed 3050      	CPI  R21,0
0002ee f031      	BREQ _0x2020070
0002ef 5051      	SUBI R21,LOW(1)
0002f0 e2e0      	LDI  R30,LOW(32)
0002f1 93ea      	ST   -Y,R30
0002f2 940e 03a7 	CALL SUBOPT_0x7
0002f4 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
0002f5 e010      	LDI  R17,LOW(0)
                 _0x202001B:
0002f6 cee0      	RJMP _0x2020016
                 _0x2020018:
0002f7 85ac      	LDD  R26,Y+12
0002f8 85bd      	LDD  R27,Y+12+1
0002f9 940e 03e0 	CALL __GETW1P
0002fb 940e 03f4 	CALL __LOADLOCR6
0002fd 9664      	ADIW R28,20
0002fe 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0002ff 92ff      	PUSH R15
000300 2ef8      	MOV  R15,R24
000301 9726      	SBIW R28,6
000302 940e 03ef 	CALL __SAVELOCR4
000304 940e 03bf 	CALL SUBOPT_0xA
000306 9730      	SBIW R30,0
000307 f419      	BRNE _0x2020072
000308 efef      	LDI  R30,LOW(65535)
000309 efff      	LDI  R31,HIGH(65535)
00030a c023      	RJMP _0x2080001
                 _0x2020072:
00030b 01de      	MOVW R26,R28
00030c 9616      	ADIW R26,6
00030d 940e 03d0 	CALL __ADDW2R15
00030f 018d      	MOVW R16,R26
000310 940e 03bf 	CALL SUBOPT_0xA
000312 83ee      	STD  Y+6,R30
000313 83ff      	STD  Y+6+1,R31
000314 e0e0      	LDI  R30,LOW(0)
000315 87e8      	STD  Y+8,R30
000316 87e9      	STD  Y+8+1,R30
000317 01de      	MOVW R26,R28
000318 961a      	ADIW R26,10
000319 940e 03d0 	CALL __ADDW2R15
00031b 940e 03e0 	CALL __GETW1P
00031d 93fa      	ST   -Y,R31
00031e 93ea      	ST   -Y,R30
00031f 931a      	ST   -Y,R17
000320 930a      	ST   -Y,R16
000321 e8eb      	LDI  R30,LOW(_put_buff_G101)
000322 e0f1      	LDI  R31,HIGH(_put_buff_G101)
000323 93fa      	ST   -Y,R31
000324 93ea      	ST   -Y,R30
000325 01de      	MOVW R26,R28
000326 961a      	ADIW R26,10
000327 dea3      	RCALL __print_G101
000328 019f      	MOVW R18,R30
000329 81ae      	LDD  R26,Y+6
00032a 81bf      	LDD  R27,Y+6+1
00032b e0e0      	LDI  R30,LOW(0)
00032c 93ec      	ST   X,R30
00032d 01f9      	MOVW R30,R18
                 _0x2080001:
00032e 940e 03f6 	CALL __LOADLOCR4
000330 962a      	ADIW R28,10
000331 90ff      	POP  R15
000332 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000333 93ba      	ST   -Y,R27
000334 93aa      	ST   -Y,R26
000335 91a9          ld   r26,y+
000336 91b9          ld   r27,y+
000337 27ee          clr  r30
000338 27ff          clr  r31
                 strlen0:
000339 916d          ld   r22,x+
00033a 2366          tst  r22
00033b f011          breq strlen1
00033c 9631          adiw r30,1
00033d cffb          rjmp strlen0
                 strlen1:
00033e 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00033f 93ba      	ST   -Y,R27
000340 93aa      	ST   -Y,R26
000341 27aa          clr  r26
000342 27bb          clr  r27
000343 91e9          ld   r30,y+
000344 91f9          ld   r31,y+
                 strlenf0:
000345 9005      	lpm  r0,z+
000346 2000          tst  r0
000347 f011          breq strlenf1
000348 9611          adiw r26,1
000349 cffb          rjmp strlenf0
                 strlenf1:
00034a 01fd          movw r30,r26
00034b 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 __base_y_G100:
000160           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
00034c 8dee      	LDD  R30,Y+30
00034d 8dff      	LDD  R31,Y+30+1
00034e 2fa3      	MOV  R26,R19
00034f e0b0      	LDI  R27,0
000350 17ae      	CP   R26,R30
000351 07bf      	CPC  R27,R31
000352 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x1:
000353 a1aa      	LDD  R26,Y+34
000354 a1bb      	LDD  R27,Y+34+1
000355 940e 03c6 	CALL _delay_ms
000357 2fe0      	MOV  R30,R16
000358 e0a1      	LDI  R26,LOW(1)
000359 940e 03d8 	CALL __LSLB12
00035b bbe5      	OUT  0x15,R30
00035c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x2:
00035d 01de      	MOVW R26,R28
00035e 9656      	ADIW R26,22
00035f 0fae      	ADD  R26,R30
000360 1fbf      	ADC  R27,R31
000361 91ec      	LD   R30,X
000362 0fee      	LSL  R30
000363 0fee      	LSL  R30
000364 bbe5      	OUT  0x15,R30
000365 940e 012b 	CALL _lcd_clear
000367 e0e1      	LDI  R30,LOW(1)
000368 93ea      	ST   -Y,R30
000369 e0a0      	LDI  R26,LOW(0)
00036a 940e 011e 	CALL _lcd_gotoxy
00036c 01fe      	MOVW R30,R28
00036d 9634      	ADIW R30,4
00036e 93fa      	ST   -Y,R31
00036f 93ea      	ST   -Y,R30
                +
000370 e8e0     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000371 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000372 93fa      	ST   -Y,R31
000373 93ea      	ST   -Y,R30
000374 2fe0      	MOV  R30,R16
000375 e0f0      	LDI  R31,0
000376 01de      	MOVW R26,R28
000377 965a      	ADIW R26,26
000378 0fae      	ADD  R26,R30
000379 1fbf      	ADC  R27,R31
00037a 91ec      	LD   R30,X
00037b 27ff      	CLR  R31
00037c 2766      	CLR  R22
00037d 2777      	CLR  R23
00037e 940e 03e8 	CALL __PUTPARD1
000380 e084      	LDI  R24,4
000381 940e 02ff 	CALL _sprintf
000383 9628      	ADIW R28,8
000384 01de      	MOVW R26,R28
000385 9614      	ADIW R26,4
000386 940e 014c 	CALL _lcd_puts
000388 a1aa      	LDD  R26,Y+34
000389 a1bb      	LDD  R27,Y+34+1
00038a 940c 03c6 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
00038c 940e 0112 	CALL __lcd_write_data
00038e e0a3      	LDI  R26,LOW(3)
00038f e0b0      	LDI  R27,0
000390 940c 03c6 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x4:
000392 e3a0      	LDI  R26,LOW(48)
000393 940e 00fe 	CALL __lcd_write_nibble_G100
                +
000395 ec88     +LDI R24 , LOW ( 200 )
000396 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000397 9701     +SBIW R24 , 1
000398 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000399 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x5:
00039a 932a      	ST   -Y,R18
00039b 85ad      	LDD  R26,Y+13
00039c 85be      	LDD  R27,Y+13+1
00039d 85ef      	LDD  R30,Y+15
00039e 89f8      	LDD  R31,Y+15+1
00039f 9509      	ICALL
0003a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6:
0003a1 89e8      	LDD  R30,Y+16
0003a2 89f9      	LDD  R31,Y+16+1
0003a3 9734      	SBIW R30,4
0003a4 8be8      	STD  Y+16,R30
0003a5 8bf9      	STD  Y+16+1,R31
0003a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
0003a7 85ad      	LDD  R26,Y+13
0003a8 85be      	LDD  R27,Y+13+1
0003a9 85ef      	LDD  R30,Y+15
0003aa 89f8      	LDD  R31,Y+15+1
0003ab 9509      	ICALL
0003ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x8:
0003ad 89a8      	LDD  R26,Y+16
0003ae 89b9      	LDD  R27,Y+16+1
0003af 9614      	ADIW R26,4
0003b0 940e 03e0 	CALL __GETW1P
0003b2 83ee      	STD  Y+6,R30
0003b3 83ff      	STD  Y+6+1,R31
0003b4 81ae      	LDD  R26,Y+6
0003b5 81bf      	LDD  R27,Y+6+1
0003b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x9:
0003b7 89a8      	LDD  R26,Y+16
0003b8 89b9      	LDD  R27,Y+16+1
0003b9 9614      	ADIW R26,4
0003ba 940e 03e0 	CALL __GETW1P
0003bc 87ea      	STD  Y+10,R30
0003bd 87fb      	STD  Y+10+1,R31
0003be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
0003bf 01de      	MOVW R26,R28
0003c0 961c      	ADIW R26,12
0003c1 940e 03d0 	CALL __ADDW2R15
0003c3 940e 03e0 	CALL __GETW1P
0003c5 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0003c6 9610      	adiw r26,0
0003c7 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0003c8 ed80     +LDI R24 , LOW ( 0x7D0 )
0003c9 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0003ca 9701     +SBIW R24 , 1
0003cb f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0003cc 95a8      	wdr
0003cd 9711      	sbiw r26,1
0003ce f7c9      	brne __delay_ms0
                 __delay_ms1:
0003cf 9508      	ret
                 
                 __ADDW2R15:
0003d0 2400      	CLR  R0
0003d1 0daf      	ADD  R26,R15
0003d2 1db0      	ADC  R27,R0
0003d3 9508      	RET
                 
                 __ANEGW1:
0003d4 95f1      	NEG  R31
0003d5 95e1      	NEG  R30
0003d6 40f0      	SBCI R31,0
0003d7 9508      	RET
                 
                 __LSLB12:
0003d8 23ee      	TST  R30
0003d9 2e0e      	MOV  R0,R30
0003da 2fea      	MOV  R30,R26
0003db f019      	BREQ __LSLB12R
                 __LSLB12L:
0003dc 0fee      	LSL  R30
0003dd 940a      	DEC  R0
0003de f7e9      	BRNE __LSLB12L
                 __LSLB12R:
0003df 9508      	RET
                 
                 __GETW1P:
0003e0 91ed      	LD   R30,X+
0003e1 91fc      	LD   R31,X
0003e2 9711      	SBIW R26,1
0003e3 9508      	RET
                 
                 __GETW1PF:
0003e4 9005      	LPM  R0,Z+
0003e5 91f4      	LPM  R31,Z
0003e6 2de0      	MOV  R30,R0
0003e7 9508      	RET
                 
                 __PUTPARD1:
0003e8 937a      	ST   -Y,R23
0003e9 936a      	ST   -Y,R22
0003ea 93fa      	ST   -Y,R31
0003eb 93ea      	ST   -Y,R30
0003ec 9508      	RET
                 
                 __SAVELOCR6:
0003ed 935a      	ST   -Y,R21
                 __SAVELOCR5:
0003ee 934a      	ST   -Y,R20
                 __SAVELOCR4:
0003ef 933a      	ST   -Y,R19
                 __SAVELOCR3:
0003f0 932a      	ST   -Y,R18
                 __SAVELOCR2:
0003f1 931a      	ST   -Y,R17
0003f2 930a      	ST   -Y,R16
0003f3 9508      	RET
                 
                 __LOADLOCR6:
0003f4 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0003f5 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0003f6 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0003f7 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0003f8 8119      	LDD  R17,Y+1
0003f9 8108      	LD   R16,Y
0003fa 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
0003fb 0fac      	ADD  R26,R28
0003fc 1fbd      	ADC  R27,R29
                 __INITLOC0:
0003fd 9005      	LPM  R0,Z+
0003fe 920d      	ST   X+,R0
0003ff 958a      	DEC  R24
000400 f7e1      	BRNE __INITLOC0
000401 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  15 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  50 r17:  36 r18:  29 r19:  17 r20:   9 r21:  17 r22:   6 r23:   2 
r24:  25 r25:   5 r26: 126 r27:  46 r28:  21 r29:   2 r30: 173 r31:  67 
x  :  26 y  : 184 z  :  16 
Registers used: 25 out of 35 (71.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   4 add   :   6 
adiw  :  29 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  18 
brge  :   4 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  10 
brlt  :   0 brmi  :   1 brne  :  38 brpl  :   1 brsh  :   8 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  64 
cbi   :   9 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  10 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   5 cpc   :   3 cpi   :  47 cpse  :   0 dec   :   7 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   2 inc   :   2 jmp   :  24 ld    :  27 ldd   :  89 ldi   : 109 
lds   :   0 lpm   :  15 lsl   :   3 lsr   :   0 mov   :  24 movw  :  18 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   7 out   :  10 pop   :   1 push  :   1 rcall :  17 ret   :  29 
reti  :   0 rjmp  :  74 rol   :   0 ror   :   0 sbc   :   1 sbci  :   2 
sbi   :   9 sbic  :   0 sbis  :   0 sbiw  :  21 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  66 std   :  31 sts   :   2 sub   :   1 subi  :  28 swap  :   1 
tst   :   5 wdr   :   1 
Instructions used: 54 out of 116 (46.6%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000804   1994     58   2052   16384  12.5%
[.dseg] 0x000060 0x000164      0      4      4    1024   0.4%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 4 warnings
